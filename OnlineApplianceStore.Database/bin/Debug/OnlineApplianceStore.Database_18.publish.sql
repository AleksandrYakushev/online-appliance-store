/*
Deployment script for OnlineApplianceStore

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "OnlineApplianceStore"
:setvar DefaultFilePrefix "OnlineApplianceStore"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[City]...';


GO
CREATE TABLE [dbo].[City] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [Id]               BIGINT         IDENTITY (1, 1) NOT NULL,
    [RoleId]           INT            NOT NULL,
    [CityId]           INT            NOT NULL,
    [Name]             NVARCHAR (30)  NULL,
    [LastName]         NVARCHAR (30)  NULL,
    [Phone]            NVARCHAR (20)  NOT NULL,
    [Password]         NVARCHAR (30)  NOT NULL,
    [Address]          NVARCHAR (100) NULL,
    [Email]            NVARCHAR (50)  NULL,
    [Birthday]         DATE           NULL,
    [RegistrationDate] DATETIME2 (7)  NULL,
    [LastUpdateDate]   DATETIME2 (7)  NULL,
    [IsDeleted]        BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [Id]            BIGINT        IDENTITY (1, 1) NOT NULL,
    [ProductId]     BIGINT        NOT NULL,
    [CustomerId]    BIGINT        NOT NULL,
    [OperationDate] DATETIME2 (7) NOT NULL,
    [PaymentTypeId] INT           NOT NULL,
    [TotalAmount]   DECIMAL (18)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrderProduct]...';


GO
CREATE TABLE [dbo].[OrderProduct] (
    [Id]            BIGINT IDENTITY (1, 1) NOT NULL,
    [OrderId]       BIGINT NOT NULL,
    [ProductId]     BIGINT NOT NULL,
    [ProductAmount] INT    NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PaymentType]...';


GO
CREATE TABLE [dbo].[PaymentType] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (1) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Id]               BIGINT        IDENTITY (1, 1) NOT NULL,
    [Name]             NVARCHAR (1)  NOT NULL,
    [Price]            DECIMAL (18)  NOT NULL,
    [Length]           FLOAT (53)    NOT NULL,
    [Width]            FLOAT (53)    NOT NULL,
    [Height]           FLOAT (53)    NOT NULL,
    [Weight]           FLOAT (53)    NOT NULL,
    [Manufacturer]     NVARCHAR (50) NOT NULL,
    [ProductionYear]   DATE          NOT NULL,
    [MaxPower]         FLOAT (53)    NOT NULL,
    [NumberOfPrograms] INT           NULL,
    [Color]            NVARCHAR (20) NULL,
    [BowlVolume]       FLOAT (53)    NULL,
    [ProductShape]     NVARCHAR (20) NULL,
    [ProductLife]      INT           NULL,
    [NoiseLevel]       INT           NULL,
    [MinTemperature]   INT           NULL,
    [NumberOfToasts]   INT           NULL,
    [BatteryLife]      INT           NULL,
    [PowerRegulator]   BIT           NULL,
    [Timer]            BIT           NULL,
    [Defrost]          BIT           NULL,
    [SuperFrost]       BIT           NULL,
    [Backlight]        BIT           NULL,
    [Display]          BIT           NULL,
    [CarboneFilter]    BIT           NULL,
    [WetCleaning]      BIT           NULL,
    [GlassCase]        BIT           NULL,
    [RemoteController] BIT           NULL,
    [WithBattery]      BIT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ProductStorage]...';


GO
CREATE TABLE [dbo].[ProductStorage] (
    [Id]           BIGINT IDENTITY (1, 1) NOT NULL,
    [ProductId]    BIGINT NOT NULL,
    [StorageId]    INT    NOT NULL,
    [ProductCount] INT    NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Role]...';


GO
CREATE TABLE [dbo].[Role] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating [dbo].[Storage]...';


GO
CREATE TABLE [dbo].[Storage] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Customer]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Customer]...';


GO
ALTER TABLE [dbo].[Customer]
    ADD FOREIGN KEY ([CityId]) REFERENCES [dbo].[City] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Order]...';


GO
ALTER TABLE [dbo].[Order]
    ADD FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Order]...';


GO
ALTER TABLE [dbo].[Order]
    ADD FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Order]...';


GO
ALTER TABLE [dbo].[Order]
    ADD FOREIGN KEY ([PaymentTypeId]) REFERENCES [dbo].[PaymentType] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderProduct]...';


GO
ALTER TABLE [dbo].[OrderProduct]
    ADD FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Order] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderProduct]...';


GO
ALTER TABLE [dbo].[OrderProduct]
    ADD FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ProductStorage]...';


GO
ALTER TABLE [dbo].[ProductStorage]
    ADD FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ProductStorage]...';


GO
ALTER TABLE [dbo].[ProductStorage]
    ADD FOREIGN KEY ([StorageId]) REFERENCES [dbo].[Storage] ([Id]);


GO
PRINT N'Creating [dbo].[Customer_Create]...';


GO
CREATE PROCEDURE [dbo].[Customer_Create]
	@RoleId int,
	@CityId int,
	@Name nvarchar (30),
	@LastName nvarchar (30),
	@Phone nvarchar (20),
	@Password nvarchar (30),
	@Address nvarchar (100),
	@Email nvarchar (50),
	@Birthday date,
	@RegistrationDate datetime2,
	@LastUpdateDate datetime2
AS
	INSERT INTO dbo.Customer
	VALUES (@RoleId, @CityId, @Name, @LastName, @Phone, @Password, @Address, @Email, @Birthday, SYSDATETIME(), SYSDATETIME())

	SELECT SCOPE_IDENTITY()
GO
PRINT N'Creating [dbo].[Customer_DeleteById]...';


GO
CREATE Procedure [dbo].[Customer_DeleteById]
  @ID BIGINT
  As
  UPDATE dbo.Customer
  SET 
  IsDeleted = 1
  WHERE (Id = @ID)
GO
PRINT N'Creating [dbo].[Customer_SelectAll]...';


GO
CREATE PROCEDURE [dbo].[Customer_SelectAll]
	AS
SELECT 
Id, RoleId, Phone, [Name], LastName, [Address], Email, Birthday, RegistrationDate, LastUpdateDate, IsDeleted
FROM
[dbo].[Customer]
GO
PRINT N'Creating [dbo].[Customer_SelectById]...';


GO
CREATE PROCEDURE [dbo].[Customer_SelectById]
	@ID int
AS
	SELECT 
	Id, RoleId, Phone, [Name], LastName, [Address], Email, Birthday, RegistrationDate, LastUpdateDate, IsDeleted
	FROM
	[dbo].[Customer]
	WHERE (Id = @ID)
GO
PRINT N'Creating [dbo].[Customer_UpdateById]...';


GO
CREATE PROCEDURE [dbo].[Customer_UpdateById]
	@Id bigint	,
	@RoleId int,
	@CityId int,
	@Name nvarchar (30),
	@LastName nvarchar (30),
	@Phone nvarchar (20),
	@Password nvarchar (30),
	@Address nvarchar (100),
	@Email nvarchar (50),
	@Birthday date,
	@RegistrationDate datetime2,
	@LastUpdateDate datetime2
AS
	UPDATE dbo.Customer
	SET
	RoleId = @RoleId,
	CityId = @CityId,
	[Name] = @Name,
	LastName = @LastName,
	Phone = @Phone,
	[Password] = @Password,
	[Address] = @Address, 
	Email = @Email,
	Birthday = @Birthday,
	RegistrationDate = @RegistrationDate,
	LastUpdateDate = @LastUpdateDate

	WHERE (Id = @Id)
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
